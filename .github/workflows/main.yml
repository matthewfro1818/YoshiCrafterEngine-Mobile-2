# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
         haxe-version: 4.3.4

      - name: Install Libraries
        run: |
         haxelib install hmm --quiet
         haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build windows
     
      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error
  Linux:
    runs-on: ubuntu-20.04
    steps:
     - name: Checkout
       uses: actions/checkout@main

     - name: Setup Haxe
       uses: krdlab/setup-haxe@master
       with:
         haxe-version: 4.3.4

     - name: Install Libraries
       run: |
        DEBIAN_FRONTEND=noninteractive sudo apt-get -qq install -o Dpkg::Progress-Fancy="0" -o APT::Color="0" -o Dpkg::Use-Pty="0" libvlc-dev libvlccore-dev < /dev/null > /dev/null
        haxelib install hmm --quiet
        haxelib run hmm install --quiet

     - name: Compile
       run: haxelib run lime build linux

     - name: Upload Artifact
       if: ${{ success() }}
       uses: actions/upload-artifact@main
  macOS:
    runs-on: macos-${{matrix.version}}
    strategy:
     matrix:
      version: [11, 12, 13]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
         haxe-version: 4.3.4

      - name: Install Libraries
        run: |
         haxelib install hmm --quiet
         haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build mac

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
         name: macOSBuild-${{matrix.version}}
         path: export/release/macos/bin/*
         if-no-files-found: error
  Android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
         ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
         haxelib install hmm --quiet
         haxelib run hmm install --quiet

      - name: Configure Android
        run: |
         haxelib run lime config ANDROID_SDK $ANDROID_HOME
         haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
         haxelib run lime config JAVA_HOME $JAVA_HOME
         haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android

      - name: Upload Artifact         
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  iOS:
    runs-on: macos-${{matrix.version}}
    strategy:
     matrix:
      version: [11, 12, 13]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
         haxe-version: 4.3.4

      - name: Install Libraries
        run: |
         haxelib install hmm --quiet
         haxelib run hmm install --quiet

      - name: Compile
        run: haxelib run lime build ios

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
         name: IOSBuild-${{matrix.version}}
         path: export/release/ios/build/*-iphoneos
         if-no-files-found: error
      - name: Make Ipa
        run: |
            cd export/release/ios/build/*-iphoneos
            mkdir Payload
            mv *.app Payload
            zip -r PsychEngine.ipa Payload

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
